election.data$year <- electoral.college$year
election.data$votes.gained <- electoral.college$votes.gained
election.data$votes.total <- electoral.college$votes.total
election.data$candidate <- electoral.college$candidate
election.data <- as.data.frame(election.data)
election.data$year <- as.numeric(as.character(election.data$year))
election.data <- election.data[which(election.data$year == 1824)[1]:nrow(election.data),]
elections$winner <- gsub(".*,", "", elections$winner)
elections$runnerup <- gsub(".*,", "", elections$runnerup)
View(election.data)
test <- gsub("\\w \\w.", "\\w", election.data$candidate)
test <- as.data.frame(gsub("\\w \\w.", "\\w", election.data$candidate))
View(test)
elections$winner <- gsub("[A-Z].", "", elections$winner)
View(elections)
rm(elections)
elections <- allTables[[1]] # making a dataframe
elections <- elections[-(1:2),] # deleting the first two rows
names(elections) <- c("order"
, "year"
, "winner"
, "pr.party"
, "cvote.share"
, "cvote.percent"
, "pvote.percent"
, "pvote.margin.percent"
, "pvote"
, "pvote.margin"
, "runnerup"
, "runnerup.party"
, "turnout")
elections <- as.data.frame(sapply(elections, gsub, pattern="%", replacement=""))
elections <- as.data.frame(sapply(elections, gsub, pattern="\\[a\\]", replacement=""))
elections <- as.data.frame(sapply(elections, gsub, pattern='−', replacement='-'))
elections$winner <- gsub(",", ", ", elections$winner)
elections$runnerup <- gsub(",", ", ", elections$runnerup)
elections$pvote <- gsub(",", "", elections$pvote)
elections$pvote.margin <- gsub(",", "", elections$pvote.margin)
elections$order <- as.numeric(as.character(elections$order))
elections$year <- as.numeric(as.character(elections$year))
elections$cvote.percent <- as.numeric(as.character(elections$cvote.percent))
elections$pvote.percent <- as.numeric(as.character(elections$pvote.percent))
elections$pvote.margin.percent <- as.numeric(as.character(elections$pvote.margin.percent))
elections$pvote <- as.numeric(as.character(elections$pvote))
elections$pvote.margin <- as.numeric(as.character(elections$pvote.margin))
elections$turnout <- as.numeric(as.character(elections$turnout))
elections$winner <- gsub(".*,", "", elections$winner) # removing last name and comma in front of fullname
elections$winner <- gsub("\n.*", "", elections$winner)
elections$winner <- gsub("[A-Z]. ", "", elections$winner)
elections$runnerup <- gsub("\n.*", "", elections$runnerup)
elections$runnerup <- gsub("[A-Z]. ", "", elections$runnerup)
elections$runnerup <- gsub(".*,", "", elections$runnerup) # same process for runner-ups
View(elections)
rm(elections)
elections <- allTables[[1]] # making a dataframe
elections <- elections[-(1:2),] # deleting the first two rows
names(elections) <- c("order"
, "year"
, "winner"
, "pr.party"
, "cvote.share"
, "cvote.percent"
, "pvote.percent"
, "pvote.margin.percent"
, "pvote"
, "pvote.margin"
, "runnerup"
, "runnerup.party"
, "turnout")
elections <- as.data.frame(sapply(elections, gsub, pattern="%", replacement=""))
elections <- as.data.frame(sapply(elections, gsub, pattern="\\[a\\]", replacement=""))
elections <- as.data.frame(sapply(elections, gsub, pattern='−', replacement='-'))
elections$winner <- gsub(",", ", ", elections$winner)
elections$runnerup <- gsub(",", ", ", elections$runnerup)
elections$pvote <- gsub(",", "", elections$pvote)
elections$pvote.margin <- gsub(",", "", elections$pvote.margin)
elections$order <- as.numeric(as.character(elections$order))
elections$year <- as.numeric(as.character(elections$year))
elections$cvote.percent <- as.numeric(as.character(elections$cvote.percent))
elections$pvote.percent <- as.numeric(as.character(elections$pvote.percent))
elections$pvote.margin.percent <- as.numeric(as.character(elections$pvote.margin.percent))
elections$pvote <- as.numeric(as.character(elections$pvote))
elections$pvote.margin <- as.numeric(as.character(elections$pvote.margin))
elections$turnout <- as.numeric(as.character(elections$turnout))
elections$winner <- gsub(".*,", "", elections$winner) # removing last name and comma in front of fullname
elections$winner <- gsub("\n.*", "", elections$winner) # removing middle name
elections$winner <- gsub("[A-Z]. ", "", elections$winner) # removing middle name
elections$runnerup <- gsub(".*,", "", elections$runnerup) # same process for runner-ups
elections$runnerup <- gsub("\n.*", "", elections$runnerup)
elections$runnerup <- gsub("[A-Z]. ", "", elections$runnerup)
View(elections)
elections[,1][election$runnerup == 'Gore'] <- "Al Gore"
elections[,1][elections$runnerup == 'Gore'] <- "Al Gore"
elections[,1][elections$runnerup == 'Smith'] <- "Al Smith"
View(elections)
View(elections)
elections[elections$runnerup == 'Smith'] <- "Al Smith"
View(elections)
View(elections)
View(electoral.college)
View(new.data)
rm(elections)
elections <- allTables[[1]] # making a dataframe
elections <- elections[-(1:2),] # deleting the first two rows
names(elections) <- c("order"
, "year"
, "winner"
, "pr.party"
, "cvote.share"
, "cvote.percent"
, "pvote.percent"
, "pvote.margin.percent"
, "pvote"
, "pvote.margin"
, "runnerup"
, "runnerup.party"
, "turnout")
elections <- as.data.frame(sapply(elections, gsub, pattern="%", replacement=""))
elections <- as.data.frame(sapply(elections, gsub, pattern="\\[a\\]", replacement=""))
elections <- as.data.frame(sapply(elections, gsub, pattern='−', replacement='-'))
elections$winner <- gsub(",", ", ", elections$winner)
elections$runnerup <- gsub(",", ", ", elections$runnerup)
elections$pvote <- gsub(",", "", elections$pvote)
elections$pvote.margin <- gsub(",", "", elections$pvote.margin)
elections$order <- as.numeric(as.character(elections$order))
elections$year <- as.numeric(as.character(elections$year))
elections$cvote.percent <- as.numeric(as.character(elections$cvote.percent))
elections$pvote.percent <- as.numeric(as.character(elections$pvote.percent))
elections$pvote.margin.percent <- as.numeric(as.character(elections$pvote.margin.percent))
elections$pvote <- as.numeric(as.character(elections$pvote))
elections$pvote.margin <- as.numeric(as.character(elections$pvote.margin))
elections$turnout <- as.numeric(as.character(elections$turnout))
elections$winner <- gsub(".*,", "", elections$winner) # removing last name and comma in front of fullname
elections$winner <- gsub("\n.*", "", elections$winner) # removing middle name
elections$winner <- gsub("[A-Z]. ", "", elections$winner) # removing middle name
elections$runnerup <- gsub(".*,", "", elections$runnerup) # same process for runner-ups
elections$runnerup <- gsub("\n.*", "", elections$runnerup)
elections$runnerup <- gsub("[A-Z]. ", "", elections$runnerup)
elections[elections$runnerup=="Gore","runnerup"] <- "Al Gore"
View(elections)
elections[which(elections$runnerup=="Gore"),"runnerup"] <- "Al Gore"
View(elections)
elections[which(elections$runnerup=="Gore"),"runnerup"]
elections[which(elections$runnerup=="Gore "),"runnerup"]
elections[elections$runnerup=="Gore","runnerup"]
elections[elections$runnerup=="Gore",]
elections[5,]
elections[5,"runnerup"]
elections[which(elections$runnerup==" Gore"),"runnerup"] <- "Al Gore"
View(elections)
elections[which(elections$runnerup==" Gore"),"runnerup"] <- "Al Gore"
elections[40, "runnerup"]
elections[which(elections$runnerup==" Smith"),"runnerup"] <- "Al Smith"
elections$winner.cvotes.gained <- gsub(" .*", "", elections$cvote.share)
elections$winner.cvotes.gained <- as.numeric(as.character(elections$winner.cvotes.gained))
rm(winner.cvotes.gained)
rm(elections$winner.cvotes.gained)
rm(list=ls(elections$winner.cvotes.gained))
elections$winner.cvotes.gained <- gsub(" .*", "", elections$cvote.share)
class(elections$cvotes.share)
class(elections$cvote.share)
as.character(elections$cvote.share)
elections$cvote.share <- as.character(elections$cvote.share)
elections$winner.cvotes.gained <- gsub(" .*", "", elections$cvote.share)
test <- as.data.frame(gsub("\\[|a\\]", "", elections$cvote.share))
View(test)
elections$winner.cvotes.gained <- gsub(" .*", "", elections[,5])
View(elections)
elections$winner.cvotes.gained <- gsub(" /*", "", elections[,5])
View(elections)
rm(list=ls()) # cleaning the envirment
wikiURL <- 'https://en.wikipedia.org/wiki/List_of_United_States_presidential_elections_by_popular_vote_margin'
allTables <- wikiURL %>%
read_html %>%
html_nodes(xpath = '//*[@id="mw-content-text"]/table[2]') %>% # copying and pasting the xpath from the webpage
html_table()
elections <- allTables[[1]] # making a dataframe
elections <- elections[-(1:2),] # deleting the first two rows
names(elections) <- c("order"
, "year"
, "winner"
, "pr.party"
, "cvote.share"
, "cvote.percent"
, "pvote.percent"
, "pvote.margin.percent"
, "pvote"
, "pvote.margin"
, "runnerup"
, "runnerup.party"
, "turnout")
elections <- as.data.frame(sapply(elections, gsub, pattern="%", replacement=""))
elections <- as.data.frame(sapply(elections, gsub, pattern="\\[a\\]", replacement=""))
elections <- as.data.frame(sapply(elections, gsub, pattern='−', replacement='-'))
elections$winner <- gsub(",", ", ", elections$winner)
elections$runnerup <- gsub(",", ", ", elections$runnerup)
elections$pvote <- gsub(",", "", elections$pvote)
elections$pvote.margin <- gsub(",", "", elections$pvote.margin)
elections$order <- as.numeric(as.character(elections$order))
elections$year <- as.numeric(as.character(elections$year))
elections$cvote.percent <- as.numeric(as.character(elections$cvote.percent))
elections$pvote.percent <- as.numeric(as.character(elections$pvote.percent))
elections$pvote.margin.percent <- as.numeric(as.character(elections$pvote.margin.percent))
elections$pvote <- as.numeric(as.character(elections$pvote))
elections$pvote.margin <- as.numeric(as.character(elections$pvote.margin))
elections$turnout <- as.numeric(as.character(elections$turnout))
webData <- 'https://en.wikipedia.org/wiki/United_States_presidential_election'
install.packages("htmltab") # using package, 'htmltab'
names(electoral.college)[1] <- "year"
names(electoral.college)[7] <- "electoral.votes"
names(electoral.college)[3] <- "candidate"
electoral.college <- htmltab(webData, which = 3)
names(electoral.college)[1] <- "year"
rm(list=ls()) # cleaning the envirment
wikiURL <- 'https://en.wikipedia.org/wiki/List_of_United_States_presidential_elections_by_popular_vote_margin'
allTables <- wikiURL %>%
read_html %>%
html_nodes(xpath = '//*[@id="mw-content-text"]/table[2]') %>% # copying and pasting the xpath from the webpage
html_table()
elections <- allTables[[1]] # making a dataframe
elections <- elections[-(1:2),] # deleting the first two rows
names(elections) <- c("order"
, "year"
, "winner"
, "pr.party"
, "cvote.share"
, "cvote.percent"
, "pvote.percent"
, "pvote.margin.percent"
, "pvote"
, "pvote.margin"
, "runnerup"
, "runnerup.party"
, "turnout")
elections <- as.data.frame(sapply(elections, gsub, pattern="%", replacement=""))
elections <- as.data.frame(sapply(elections, gsub, pattern="\\[a\\]", replacement=""))
elections <- as.data.frame(sapply(elections, gsub, pattern='−', replacement='-'))
elections$winner <- gsub(",", ", ", elections$winner)
elections$runnerup <- gsub(",", ", ", elections$runnerup)
elections$pvote <- gsub(",", "", elections$pvote)
elections$pvote.margin <- gsub(",", "", elections$pvote.margin)
elections$order <- as.numeric(as.character(elections$order))
elections$year <- as.numeric(as.character(elections$year))
elections$cvote.percent <- as.numeric(as.character(elections$cvote.percent))
elections$pvote.percent <- as.numeric(as.character(elections$pvote.percent))
elections$pvote.margin.percent <- as.numeric(as.character(elections$pvote.margin.percent))
elections$pvote <- as.numeric(as.character(elections$pvote))
elections$pvote.margin <- as.numeric(as.character(elections$pvote.margin))
elections$turnout <- as.numeric(as.character(elections$turnout))
setwd("/Users/hyunjoooh/Desktop/2017_Stat_Prog/PS4")
pdf(file = 'Turnout_and_voteshare')
plot(elections$year, elections$turnout,
type = "p",
pch = "t",
main = "Turnout and votes of the winners in Pr. elections, 1824-2016",
xlab = "Election year",
ylab = "Turnout or Voteshare(%)")
points(elections$year, elections$cvote.percent,
pch = 'c', col = 'green')
points(elections$year, elections$pvote.percent,
pch = 'p', col = 'brown')
legend("bottomright", c("Turnout", "Electoral college vote", "popular vote"),
pch = c("t", "c", "p"),
col = c("black", "green", "brown"),
cex = 0.7)
plot.new()
with(elections[elections$pr.party == "Rep.",]
, plot(year, turnout,
main = 'Turnout and the winning party, 1824-2016',
xlab = 'Election year',
ylab = 'turnout',
pch = 'R',
col = 'red'))
abline(lm(elections$turnout ~ elections$year),
col = 'gray',
lty = 3,
lwd = 2
)
with(elections[elections$pr.party == "Rep.",]
, abline(lm(turnout ~ year),
col = 'red'))
with(elections[elections$pr.party == "Dem.",]
, points(year, turnout,
pch = 'D',
col = 'blue'))
with(elections[elections$pr.party == "Dem.",]
, abline(lm(turnout ~ year),
col = 'blue'))
legend("topright", c("General turnout", "Rep. winner", "Dem. winner"),
pch = c("-", "-", "-"),
col = c('gray', 'red', 'blue'))
plot.new()
par(mfrow=c(3,1))
with(elections[elections$pr.party == "Rep.",]
, plot(year, turnout,
main = 'Turnout and the winning party, 1824-2016',
xlab = 'Election year',
ylab = 'turnout',
pch = 'R',
col = 'red'))
abline(lm(elections$turnout ~ elections$year),
col = 'gray',
lty = 3,
lwd = 2
)
with(elections[elections$pr.party == "Rep.",]
, abline(lm(turnout ~ year),
col = 'red'))
with(elections[elections$pr.party == "Dem.",]
, points(year, turnout,
pch = 'D',
col = 'blue'))
with(elections[elections$pr.party == "Dem.",]
, abline(lm(turnout ~ year),
col = 'blue'))
with(elections[elections$pr.party == "Rep.",]
, plot(year, cvote.percent,
main = 'Electoral college voteshare and the winning party, 1824-2016',
xlab = 'Election year',
ylab = 'Voteshare (%)',
pch = 'R',
col = 'red'))
abline(lm(elections$cvote.percent ~ elections$year),
col = 'gray',
lty = 3,
lwd = 2
)
with(elections[elections$pr.party == "Rep.",]
, abline(lm(cvote.percent ~ year),
col = 'red'))
with(elections[elections$pr.party == "Dem.",]
, points(year, cvote.percent,
pch = 'D',
col = 'blue'))
with(elections[elections$pr.party == "Dem.",]
, abline(lm(cvote.percent ~ year),
col = 'blue'))
with(elections[elections$pr.party == "Rep.",]
, plot(year, pvote.percent,
main = 'Popular voteshare and the winning party, 1824-2016',
xlab = 'Election year',
ylab = 'Voteshare (%)',
pch = 'R',
col = 'red'))
abline(lm(elections$pvote.percent ~ elections$year),
col = 'gray',
lty = 3,
lwd = 2
)
with(elections[elections$pr.party == "Rep.",]
, abline(lm(pvote.percent ~ year),
col = 'red'))
with(elections[elections$pr.party == "Dem.",]
, points(year, pvote.percent,
pch = 'D',
col = 'blue'))
with(elections[elections$pr.party == "Dem.",]
, abline(lm(pvote.percent ~ year),
col = 'blue'))
dev.off()
webData <- 'https://en.wikipedia.org/wiki/United_States_presidential_election'
install.packages("htmltab") # using package, 'htmltab'
install.packages("htmltab")
library(htmltab)
electoral.college <- htmltab(webData, which = 3)
names(electoral.college)[1] <- "year"
names(electoral.college)[7] <- "electoral.votes"
names(electoral.college)[3] <- "candidate"
electoral.college$votes.gained <- gsub(" .*", "", electoral.college$electoral.votes)
electoral.college$votes.gained <- as.numeric(as.character(electoral.college$votes.gained))
electoral.college$votes.total <- gsub(".* ", "", electoral.college$electoral.votes)
electoral.college$votes.total <- as.numeric(as.character(electoral.college$votes.total))
election.data <- NULL
election.data$year <- electoral.college$year
election.data$votes.gained <- electoral.college$votes.gained
election.data$votes.total <- electoral.college$votes.total
election.data$candidate <- electoral.college$candidate
election.data <- as.data.frame(election.data)
election.data$year <- as.numeric(as.character(election.data$year))
election.data <- election.data[which(election.data$year == 1824)[1]:nrow(election.data),]
elections$winner <- gsub(".*,", "", elections$winner) # removing last name and comma in front of fullname
elections$winner <- gsub("\n.*", "", elections$winner) # removing middle name
elections$winner <- gsub("[A-Z]. ", "", elections$winner) # removing middle name
elections$runnerup <- gsub(".*,", "", elections$runnerup) # same process for runner-ups
elections$runnerup <- gsub("\n.*", "", elections$runnerup)
elections$runnerup <- gsub("[A-Z]. ", "", elections$runnerup)
elections[which(elections$runnerup==" Gore"),"runnerup"] <- "Al Gore" # putting the right name
elections[which(elections$runnerup==" Smith"),"runnerup"] <- "Al Smith"
election.data[which(election.data$candidate=="William Howard Taft")] <- "William Taft"
View(election.data)
election.data[which(election.data$candidate=="William Howard Taft"), "candidate"] <- "William Taft"
election.data[which(election.data$candidate=="Adlai Stevenson II", "candidate"] <- "Adlai Stevenson"
# merge data
new.data <- merge(election.data, elections, by="year")
election.data[which(election.data$candidate=="Adlai Stevenson II"), "candidate"] <- "Adlai Stevenson"
View(election.data)
rm(election.data)
election.data <- NULL
election.data$year <- electoral.college$year
election.data$votes.gained <- electoral.college$votes.gained
election.data$votes.total <- electoral.college$votes.total
election.data$candidate <- electoral.college$candidate
election.data$year <- as.numeric(as.character(election.data$year))
election.data <- election.data[which(election.data$year == 1824)[1]:nrow(election.data),]
election.data[which(election.data$candidate=="William Howard Taft"), "candidate"] <- "William Taft"
class(elections)
election.data <- NULL
election.data$year <- electoral.college$year
election.data$votes.gained <- electoral.college$votes.gained
election.data$votes.total <- electoral.college$votes.total
election.data$candidate <- electoral.college$candidate
election.data <- as.data.frame(election.data)
election.data$year <- as.numeric(as.character(election.data$year))
election.data <- election.data[which(election.data$year == 1824)[1]:nrow(election.data),]
class(election.data)
which(election.data$candidate=="William Howard Taft"), "candidate"
election.data[which(election.data$candidate=="William Howard Taft"), "candidate"]
election.data[which(election.data$candidate=="William Howard Taft"), "candidate"] <- "William Taft"
election.data[170,"candidate"]
election.data[170, ]
View(election.data)
election.data[10,]
election.data[100,]
rm(election.data)
election.data <- NULL
election.data$year <- electoral.college$year
election.data$votes.gained <- electoral.college$votes.gained
election.data$votes.total <- electoral.college$votes.total
election.data$candidate <- electoral.college$candidate
election.data <- NULL
election.data$year <- electoral.college$year
election.data$candidate <- electoral.college$candidate
election.data$votes.gained <- electoral.college$votes.gained
election.data$votes.total <- electoral.college$votes.total
election.data$candidate
class(election.data$candidate=="William Howard Taft")
class(election.data$candidate)
election.data[170, election.data$candidate]
election.data[election.data$candidate]
election.data[,election.data$candidate]
election.data[election.data$candidate,]
election.data[168, 3]
election.data$candidate[168]
election.data$candidate[168] <- "Adlai Stevenson"
election.data$candidate[170] <- "Adlai Stevenson"
election.data$candidate[141:145]
election.data <- as.data.frame(election.data)
election.data <- NULL
election.data$year <- electoral.college$year
election.data$candidate <- electoral.college$candidate
election.data$votes.gained <- electoral.college$votes.gained
election.data$votes.total <- electoral.college$votes.total
election.data$candidate[168] <- "Adlai Stevenson"
election.data$candidate[170] <- "Adlai Stevenson"
election.data$candidate[141] <- "William Taft"
election.data$candidate[145] <- "William Taft"
election.data <- as.data.frame(election.data)
election.data$year <- as.numeric(as.character(election.data$year))
election.data <- election.data[which(election.data$year == 1824)[1]:nrow(election.data),]
elections$winner <- gsub(".*,", "", elections$winner) # removing last name and comma in front of fullname
elections$winner <- gsub("\n.*", "", elections$winner) # removing middle name
elections$winner <- gsub("[A-Z]. ", "", elections$winner) # removing middle name
elections$runnerup <- gsub(".*,", "", elections$runnerup) # same process for runner-ups
elections$runnerup <- gsub("\n.*", "", elections$runnerup)
elections$runnerup <- gsub("[A-Z]. ", "", elections$runnerup)
elections[which(elections$runnerup==" Gore"),"runnerup"] <- "Al Gore" # putting the right name
elections[which(elections$runnerup==" Smith"),"runnerup"] <- "Al Smith"
new.data <- merge(elections, election.data,
by.x = c("winner", "year"),
by.y = c("candidate", "year"))
View(new.data)
new.data <- merge(election.data, elections, by="year")
View(new.data)
new.data <- merge(election.data, elections,
by="year",
by.x = c("candidates", "winner"))
new.data <- merge(election.data, elections,
by.x = c("candidates", "winner"))
new.data <- merge(elections, election.data,
by.x = c("winner", "candidate))
#
setwd("~/Google Drive/2. Academicos/6. Doutorado/Class/2017/Spring/PS 5625 - Applied Statistical Programming/Homeworks/Problem Sets/PS4")
save(complete_data, file = "complete_data.RData")
new.data <- merge(elections, election.data,
by.x = c("winner", "year"),
by.y = c("candidate","year"))
View(new.data)
new.data <- merge(elections, election.data,
by.x = c("winner", "year"),
by.y = c("candidate","year"))
new.data <- merge(elections, election.data,
by = 'year')
new.data <- merge(elections, election.data,
by = c("year", "winner", "runnerup"))
new.data <- merge(elections, election.data,
by = c("year", "runnerup"))
new.data <- merge(elections, election.data,
by = c("year", "runnerup"))
new.data <- merge(elections, election.data,
by = "year")
new.data["winner" == "candidate" | "runnerup" == "candidate"]
new.data[which("winner" == "candidate" | "runnerup" == "candidate")]
new.data[, which("winner" == "candidate" | "runnerup" == "candidate")]
new.data[which("winner" == "candidate" | "runnerup" == "candidate"),]
new.data[which("winner" == "candidate" | "runnerup" == "candidate"),1:nrow]
new.data[which("winner" == "candidate" | "runnerup" == "candidate"),]
test <- new.data[which("winner" == "candidate" | "runnerup" == "candidate"),]
View(test)
save(new.data, file = "new.data.RData")
load("/Users/hyunjoooh/Desktop/2017_Stat_Prog/PS4/new.data.RData")
rm(list=ls()) # cleaning the envirment
install.packages("rvest") # installing package
